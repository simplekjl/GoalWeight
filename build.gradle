buildscript {
    repositories {
        google()
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
    }

    dependencies {
        classpath "org.jacoco:org.jacoco.core:${Versions.jacoco}"
        classpath "com.android.tools.build:gradle:${Versions.gradlePlugin}"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${Versions.kotlin}"
        classpath "org.jetbrains.kotlin:kotlin-android-extensions-runtime:${Versions.kotlin}"
    }
}
allprojects {
    apply plugin: 'jacoco'

    repositories {
        google()
        mavenCentral()
        maven {
            url "https://jitpack.io"
        }
    }

    tasks.withType(Test) {
        // Logging on console test results
        testLogging {
            events "failed"
            showExceptions true
            showCauses true
            showStackTraces true
        }
    }

    //overwrite gradle default value for jacoco
    jacoco {
        toolVersion = "${Versions.jacoco}"
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

/**
 *
 * Auto increment build code and version name
 *
 * @params: versionName -> app's version name
 */
task incrementVersion {
    doLast {
        File gradleProperties = file("./app/gradle.properties")

        Properties props = new Properties()
        props.load(gradleProperties.newDataInputStream())

        def code = props.getProperty('VERSION_CODE').toInteger() + 1

        props.setProperty('VERSION_CODE', code.toString())
        props.setProperty('VERSION_NAME', versionName)

        props.store(new FileWriter(gradleProperties), null)

        println "Version"
        println "Code: " + props.getProperty('VERSION_CODE')
        println "Name: " + props.getProperty('VERSION_NAME')
    }
}